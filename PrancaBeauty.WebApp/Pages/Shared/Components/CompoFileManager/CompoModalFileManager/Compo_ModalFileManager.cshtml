@page "/{culture}/Shared/Compo/ComboModalFileManager"
@model PrancaBeauty.WebApp.Pages.Shared.Components.CompoFileManager.CompoModalFileManager.Compo_ModalFileManagerModel
@inject PrancaBeauty.Application.Apps.Languages.ILanguageApplication _LanguageApplication

@{
    string FieldName = Model.Input.FieldName;
    string FieldId = FieldName.Replace(".", "_").Replace("[", "_").Replace("]", "_");
    string FieldTitle = Localizer[FieldName.Split('.').Last()];
}

<div id="CompoModalFileManager@(FieldId)" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Localizer["FileManager"]</h5>
                <button type="button" class="close">
                    <span onclick="CloseModalFileManager@(FieldId)()" aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="row mb-4">
                            <div class="col-md-12">
                                <div class="card">
                                    <div class="card-body">
                                        @Html.Raw(Localizer["ModalFileManagerRoles", Model.Input.MaxFileCount, Model.Input.MaxFileSize.GetFileSizeName(), Model.Input.AllowedMimeType])
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="card card-light p-3">
                                    <LoadComponent id="ComboFileListFilter@(FieldId)"
                                                   context="HttpContext"
                                                   data='new viCompo_ModalFileListFilter { FileTitle=null,UploaderUserId=null,FileTypeId=null,Sort=null,FieldName=Model.Input.FieldName }'
                                                   url="/@ViewData["culture"]/Shared/Compo/ComboModalFileManagerFilter"></LoadComponent>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="card card-light p-3">
                                    <LoadComponent id="ComboContent@(FieldId)"
                                                   context="HttpContext"
                                                   data='new viCompo_ModalFileList { CurrentPage=1,SelectedFilesId=Model.Input.SelectedFilesId,FieldName=Model.Input.FieldName  }'
                                                   url="/@ViewData["culture"]/Shared/Compo/ComboModalFileList"></LoadComponent>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        function ResetFilters@(FieldId)() {
            LoadComponenet('/@ViewData["culture"]/Shared/Compo/ComboModalFileManagerFilter', {
                Title: null,
                UserId: null,
                FileTypeId: null,
                Sort: null,
                FieldName:'@Model.Input.FieldName'
            }, function (res) {
                $('#ComboFileListFilter@(FieldId)').html(res);
                setTimeout(function () {
                     AffectFilter@(FieldId)();
                }, 500);

            });
        }

        function AffectFilter@(FieldId)() {
            LoadComponenet('/@ViewData["culture"]/Shared/Compo/ComboModalFileList', {
                FieldName: '@Model.Input.FieldName',
                FileTitle: $('#Input_FileTitle').val(),
                FileTypeId: $('#Input_FileTypeId').val(),
                UploaderUserId: $('#Input_UploaderUserId').val(),
                CurrentPage:1,
                Sort: $('#Input_Sort').val(),
            }, function (res) {
                $('#ComboContent@(FieldId)').html(res);
            });
        }

        function AddToFileSelector@(FieldId)(_FileId,_FileSize,_FileMimeType) {
            var _SelectedFilesId = $('#@(FieldId)').val();

            // #region برسی تعداد فایل های انتخاب شده
            {
                var _Count = _SelectedFilesId.split(",").length;
                if (_SelectedFilesId == "")
                    _Count = 0;

                if (_Count >=@Model.Input.MaxFileCount) {
                    Alert('', '@Localizer["ModalFileManagerMaxFileCount", Model.Input.MaxFileCount]');
                    return;
                }
            }
            // #endregion

            // #region برسی حجم فایل انتخاب شده
            {
                if (_FileSize > @Model.Input.MaxFileSize) {
                    Alert('', '@Localizer["ModalFileManagerErrorFileSize", Model.Input.MaxFileSize.GetFileSizeName()]');
                    return;
                }
            }
            // #endregion

            // #region برسی نوع فایل ها
            {
                if (!'@Model.Input.AllowedMimeType'.includes(_FileMimeType)) {
                    Alert('', '@Html.Raw(Localizer["ModalFileManagerErrorMimeType", Model.Input.AllowedMimeType])');
                    return;
                }
            }
            // #endregion

            // #region برسی تکراری نبودن فایل
            {
                if (_SelectedFilesId.includes(_FileId)) {
                    Alert('','@Localizer["SelectedFileIsDuplicate"]');
                    return;
                }
            }
            // #endregion

            RefreshFileSelector@(FieldId)(trim(_SelectedFilesId+","+_FileId ,','), function () {
                RefreshFileList@(FieldId)();
            });
        }

        function CloseModalFileManager@(FieldId)() {
            $('#CompoModalFileManager@(FieldId)').remove();
            $('.modal-backdrop').remove();
        }
    </script>
</div>

