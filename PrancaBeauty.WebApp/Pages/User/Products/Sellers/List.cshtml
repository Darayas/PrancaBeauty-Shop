@page "/{culture}/User/Product/Sellers/List/{ProductId}"
@model PrancaBeauty.WebApp.Pages.User.Products.Sellers.ListModel
@{
    ViewData["Title"] = Localizer["ProductSellerList", Model.ProductTitle];
    Layout = "~/Pages/Shared/_UserLayout.cshtml";
}

@section breadcrumbs{
<div class="breadcrumbs_area">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="breadcrumb_content">
                    <ul>
                        <li><a href="/@ViewData["Culture"]">@Localizer["Home"]</a></li>
                        <li><a href="/@ViewData["Culture"]/User/Index">@Localizer["Dashboard"]</a></li>
                        <li><a href="@ViewData["ReturnUrl"]">@Localizer["ProductList"]</a></li>
                        <li>@ViewData["Title"]</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
    }

<div class="row">
    <div class="col-md-12">
        <div class="k-lang">
            @(Html.Kendo()
            .Grid<vmListSellers>()
            .Name("ListProductSeller")
            .DefaultSettings(Localizer)
            .Columns(col=> {
            col.Bound(a => a.Id).Hidden().HtmlAttributes(new { @class = "RowId" }).Sortable(false);
            col.Bound(a=>a.FullName);
            col.Bound(a => a.Date).Width(90).HtmlAttributes(new { @class = "text-left" }).Sortable(false);
            col.Bound(a => a.IsConfirm).HtmlAttributes(new {style = "text-align:center;" }).ClientTemplate("<img style='width:32px' src='/Shared/img/#=IsConfirm#.png'/>").Width(50).Sortable(false);
            col.Bound(a => a.HasUnConfermVariants).HtmlAttributes(new {style = "text-align:center;" }).ClientTemplate("<img style='width:32px' src='/Shared/img/#=HasUnConfermVariants#.png'/>").Width(50).Sortable(false);
            col.Bound(a => a).Width(50).Title(" ")
            .HtmlAttributes(new { style= "overflow: visible; text-align: center;" })
            .ClientHeaderTemplate((User.IsInRole(Roles.CanAddProductSeller)? "<button class='btn btn-success btn-sm' onclick='Add()'><i class='fa fa-plus'></i></button>" : "") + $"<button class='btn btn-primary btn-sm ml-1 mr-1' onclick='GotoBack()'><i class='fa fa-undo'></i></button>")
            .ClientTemplateId("DropDownCmd");
            })
            .DataSource(ds=>ds.Ajax()
            .PageSize(10)
            .Read(read=>read.Url($"/{CultureInfo.CurrentCulture.Parent.Name}/User/Product/Sellers/List/{Model.ProductId}?handler=ReadData").Data("forgeryToken"))))
        </div>
    </div>
    <script id="DropDownCmd">
        <div class="item-action dropdown">
            <a href="javascript:void(0)" data-toggle="dropdown" class="icon"><i class="fa fa-bars fs-16 text-dark"></i></a>
            <div class="dropdown-menu dropdown-menu-left">
             @if (User.IsInRole(Roles.CanEditProductSeller))
             {
                <a href="/@ViewData["culture"]/User/Product/Sellers/Edit/@Model.ProductId/#:Id#?ReturnUrl=@Request.GetCurrentUrlEncoded()" class="dropdown-item"><i class="dropdown-icon fa fa-edit"></i>@Localizer["Edit"]</a>
             }

             @if (User.IsInRole(Roles.CanDeleteProductSeller))
             {
                  <a onclick="Remove('#:Id#')" class="dropdown-item"><i class="dropdown-icon fa fa-times"></i>@Localizer["Remove"]</a>
             }

             @if (User.IsInRole(Roles.CanChangeStatusProductSeller))
             {
                  <a onclick="ChangeStatus('#:Id#')" class='dropdown-item #=IsConfirm==true?"hide":""#'><i class="dropdown-icon fa fa-check"></i>@Localizer["Confirm"]</a>
                  <a onclick="ChangeStatus('#:Id#')" class='dropdown-item  #=IsConfirm==false?"hide":""#'><i class="dropdown-icon fa fa-ban"></i>@Localizer["Reject"]</a>
             }
             
             @if (User.IsInRole(Roles.CanViewDetailsProductSeller))
             {
                  <a href="/@ViewData["culture"]/User/Product/Sellers/Details/@Model.ProductId/#:Id#" class='dropdown-item'><i class="dropdown-icon fa fa-check"></i>@Localizer["Details"]</a>
             }
            </div>
        </div>
    </script>

    <script>
        function RefreshData()
        {
            RefreshGrid('ListProductSeller');
        }

        function GotoBack()
        {
            location.href='@ViewData["ReturnUrl"]';
        }
    </script>
</div>

<script>
    @if (User.IsInRole(Roles.CanAddProductSeller))
    {
        <text>
                  function Add()
                  {
                      //var _Id= $('#ListProductSeller .VariantId')[0].innerHTML;
                      location.href='/@ViewData["culture"]/User/Product/Sellers/Add/@Model.ProductId?ReturnUrl=@Request.GetCurrentUrlEncoded()';
                  }
        </text>
    }

    @if (User.IsInRole(Roles.CanDeleteProductSeller))
    {
        <text>
                  function Remove(_Id)
                  {
                      RemoveData('/@ViewData["culture"]/User/Product/Sellers/List/@Model.ProductId?handler=Remove',{ProductSellerId:_Id, ProductId:'@Model.ProductId'});
                  }
        </text>
    }

     @if (User.IsInRole(Roles.CanChangeStatusProductSeller))
    {
        <text>
                  function ChangeStatus(_Id)
                  {
                      AreYouSureData('/@ViewData["culture"]/User/Product/Sellers/List/@Model.ProductId?handler=ChangeStatus',{ProductSellerId:_Id, ProductId:'@Model.ProductId'});
                  }
        </text>
    }
</script>
