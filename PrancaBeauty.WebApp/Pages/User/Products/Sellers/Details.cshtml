@page "/{culture}/User/Product/Sellers/Details/{ProductId}/{ProductSellerId}"
@model PrancaBeauty.WebApp.Pages.User.Products.Sellers.DetailsModel
@{
    ViewData["Title"] = Localizer["AddProductSeller"];
    Layout = "~/Pages/Shared/_UserLayout.cshtml";
}

@section breadcrumbs{
<div class="breadcrumbs_area">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="breadcrumb_content">
                    <ul>
                        <li><a href="/@ViewData["Culture"]">@Localizer["Home"]</a></li>
                        <li><a href="/@ViewData["Culture"]/User/Index">@Localizer["Dashboard"]</a></li>
                        <li><a href="/@ViewData["Culture"]/User/Products/List">@Localizer["ProductList"]</a></li>
                        <li><a href="/@ViewData["Culture"]/User/Product/Sellers/List/@Model.ProductId">@Localizer["ProductSellerList",Model.Data.ProductTitle]</a></li>
                        <li>@Localizer["Details"]</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
}

<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                @Localizer["PersoanlDetails"]
            </div>
            <div class="card-body">
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12"><label class="form-labael">@Html.DisplayNameFor(a=>a.Data.FulUserName):</label></div>
                        <div class="col-md-12">
                            @Html.DisplayFor(a=>a.Data.FulUserName)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12"><label class="form-labael">@Html.DisplayNameFor(a=>a.Data.SellerTitle):</label></div>
                        <div class="col-md-12">
                            @Html.DisplayFor(a=>a.Data.SellerTitle)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12"><label class="form-labael">@Html.DisplayNameFor(a=>a.Data.DateTime):</label></div>
                        <div class="col-md-12">
                            @Html.DisplayFor(a=>a.Data.DateTime)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-12"><label class="form-labael">@Html.DisplayNameFor(a=>a.Data.IsSellerConfimed):</label></div>
                        <div class="col-md-12">
                            <img src="~/Shared/img/@(Model.Data.IsSellerConfimed).png" width="28" height="28" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                @Localizer["ProductVariantItemsFor",Model.Data.ProductTitle]
            </div>
            <div class="card-body">
                @(Html.Kendo()
                      .Grid<vmGetProductSellerVariants>()
                      .Name("ListVariants")
                      .DefaultSettings(Localizer)
                      .Columns(col=> {
                                col.Bound(a => a.Id).Hidden().HtmlAttributes(new { @class = "RowId" }).Sortable(false);
                                col.Bound(a=>a.Title);
                                col.Bound(a=>a.Value);
                                col.Bound(a => a.Percent).HtmlAttributes(new { @class = "text-left" }).Sortable(false);
                                col.Bound(a => a.GuaranteeTitle).Sortable(false);
                                col.Bound(a=>a.SendBy);
                                col.Bound(a=>a.SendFrom);
                                col.Bound(a=>a.CountInStock);
                                col.Bound(a => a.IsEnable).HtmlAttributes(new {style = "text-align:center;" }).ClientTemplate("<img style='width:32px' src='/Shared/img/#=IsEnable#.png'/>").Width(50).Sortable(false);
                                col.Bound(a => a.IsConfirm).HtmlAttributes(new {style = "text-align:center;" }).ClientTemplate("<img style='width:32px' src='/Shared/img/#=IsConfirm#.png'/>").Width(50).Sortable(false);
                                col.Bound(a => a).Width(50).Title(" ")
                                                           .HtmlAttributes(new { style= "overflow: visible; text-align: center;" })
                                                           .ClientHeaderTemplate((User.IsInRole(Roles.CanAddProductSeller)? "<button class='btn btn-success btn-sm' onclick='Add()'><i class='fa fa-plus'></i></button>" : "") + $"<button class='btn btn-primary btn-sm ml-1 mr-1' onclick='GotoBack()'><i class='fa fa-undo'></i></button>")
                                                           .ClientTemplateId("DropDownCmd");
                      })
                      .DataSource(ds=>ds.Ajax()
                                        .PageSize(10)
                                        .Read(read=>read.Url($"/{CultureInfo.CurrentCulture.Parent.Name}/User/Product/Sellers/Details/{Model.ProductId}/{Model.ProductSellerId}?handler=ReadData&ProductId={Model.ProductId}&SellerId={Model.SellerId}").Data("forgeryToken"))))
                                        
            </div>
        </div>
    </div>
</div>