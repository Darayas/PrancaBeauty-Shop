@model List<vmMainPageShowcase>
@using Framework.Domain.Enums

@{
    int ShowcaseCount = 0;
    foreach (var itemShowcase in Model.Where(a => a.LstTabs.Any()))
    {
        <div class="@itemShowcase.CssClass" style="background-color:@itemShowcase.BackgroundColorCode;@itemShowcase.CssStyle">
            <div class="@(itemShowcase.IsFullWidth?"container-fluid":"container")">
                <div class="row">
                    <div class="col-12">
                        <div class="section_title">
                            <h3>@itemShowcase.Title</h3>
                            <p>@itemShowcase.Description</p>
                        </div>

                        <div class="product_tab_btn @(itemShowcase.LstTabs.Where(a => a.LstTabSection.Any()).Count()<=1?"hidden":"")">
                            <ul class="nav" role="tablist">
                                @{
                                    int CounterTabItem = 0;
                                    foreach (var itemTab in itemShowcase.LstTabs.Where(a => a.LstTabSection.Any()))
                                    {
                                        <li>
                                            <a class="@(itemShowcase.LstTabs.IndexOf(itemTab)==0?"active":"")" data-bs-toggle="tab" href="#TabItem@(ShowcaseCount)@(CounterTabItem)" role="tab" aria-selected="true">
                                                @itemTab.Title
                                            </a>
                                        </li>
                                        CounterTabItem++;
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class=col-12>
                        <div class=tab-content>
                            @{
                                CounterTabItem = 0;
                                foreach (var itemTab in itemShowcase.LstTabs.Where(a => a.LstTabSection.Any()))
                                {
                                    <div class="tab-pane fade @(itemShowcase.LstTabs.IndexOf(itemTab)==0?"show active":"")" style="background-color:@itemTab.BackgroundColorCode" id="TabItem@(ShowcaseCount)@(CounterTabItem)" role="tabpanel">
                                        <div class=row>
                                            @{
                                                AddTabSection(itemTab.LstTabSection);
                                            }
                                        </div>
                                    </div>

                                    CounterTabItem++;
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        ShowcaseCount++;
    }
}

@functions {
    private void AddTabSection(IEnumerable<vmMainPageShowcase_TabSection> LstTabSection, string Id = null)
    {
        <div class=row>
            @foreach (var itemTabSection in LstTabSection.Where(a => Id!=null ? a.ParentId==Id : true))
            {
                <div class="col-xl-@itemTabSection.XlSize col-lg-@itemTabSection.LgSize col-md-@itemTabSection.MdSize col-sm-@itemTabSection.SmSize col-xs-@itemTabSection.XsSize">

                    @{
                        if (LstTabSection.Any(a => a.ParentId==itemTabSection.Id))
                            AddTabSection(LstTabSection, itemTabSection.Id);
                        else
                        {
                            if (itemTabSection.LstSectionItem.Any())
                            {
                                @if (itemTabSection.IsSlider)
                                {
                                    <div class='product_carousel owl-carousel'>
                                        AddSectionItems(itemTabSection.LstSectionItem, true, itemTabSection.CountInSection, itemTabSection.HowToDisplayItems);
                                    </div>
                                }
                                else
                                    AddSectionItems(itemTabSection.LstSectionItem, false, itemTabSection.CountInSection, itemTabSection.HowToDisplayItems);

                            }

                        }
                    }

                </div>
            }
        </div>
    }

    private void AddSectionItems(IEnumerable<vmMainPageShowcase_SectionItem> SectionItems, bool IsSlider, int CountInSection, TabSectionHowToDisplayEnum HowToDisplayItems)
    {

        @foreach (var item in SectionItems.IfThenElse(!IsSlider, a => a.Take(CountInSection)))
        {
            <div class=@(item.SectionType!=TabSectionItemsEnum.FreeItem?"single_product":"")>
                @if (item.SectionType==TabSectionItemsEnum.FreeItem)
                {

                }

                @if (item.SectionType==TabSectionItemsEnum.Product)
                {

                }

            </div>
        }

    }
}