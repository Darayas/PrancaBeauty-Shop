// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrancaBeauty.Infrastructure.EFCore.Context;

#nullable disable

namespace PrancaBeauty.Infrastructure.EFCore.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Categories.CategoriesAgg.Entities.tblCategoris", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("ParentId");

                    b.ToTable("tblCategoris");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Categories.CategoriesAgg.Entities.tblCategory_Translates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LangId");

                    b.ToTable("tblCategory_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.FileServer.FileAgg.Entities.tblFiles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("FilePathId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileTypeId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<long>("SizeOnDisk")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FilePathId");

                    b.HasIndex("FileTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("tblFiles");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.FileServer.FilePathAgg.Entities.tblFilePaths", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileServerId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("FileServerId");

                    b.ToTable("tblFilePaths");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.FileServer.FileTypeAgg.Entities.tblFileTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extentions")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblFileTypes");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.FileServer.ServerAgg.Entities.tblFileServers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Capacity")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FtpData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HttpDomin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HttpPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblFileServers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Keywords.KeywordAgg.Entities.tblKeywords", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("tblKeywords");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Keywords.Keywords_Products.Entities.tblKeywords_Products", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KeywordId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Similarity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("KeywordId");

                    b.HasIndex("ProductId");

                    b.ToTable("tblKeywords_Products");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.GuaranteeAgg.Entities.tblGuarantee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("tblGuarantee");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.GuaranteeAgg.Entities.tblGuarantee_Translates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GuaranteeId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("GuaranteeId");

                    b.HasIndex("LangId");

                    b.ToTable("tblGuarantee_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.PostingRestrictionsAgg.Entites.tblPostingRestrictions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Posting")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProductId");

                    b.ToTable("tblPostingRestrictions");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorUserId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Incomplete")
                        .HasColumnType("bit");

                    b.Property<string>("IncompleteReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<bool>("ItsForConfirm")
                        .HasColumnType("bit");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MetaTagCanonical")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("MetaTagDescreption")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("MetaTagKeyword")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid?>("TopicId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UniqueNumber")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorUserId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LangId");

                    b.HasIndex("TopicId");

                    b.ToTable("tblProducts");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductAskAgg.Entities.tblProductAsk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AskId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AskId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("tblProductAsk");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductAskLikesAgg.Entities.tblProductAskLikes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLike")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductAskId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductAskId");

                    b.HasIndex("UserId");

                    b.ToTable("tblProductAskLikes");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductMediaAgg.Entities.tblProductMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("tblProductMedia");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductPricesAgg.Entities.tblProductPrices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrencyId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("tblProductPrices");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductPropertiesValuesAgg.Entities.tblProductPropertiesValues", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductPropertiesId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductPropertiesId");

                    b.ToTable("tblProductPropertiesValues");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductPropertisAgg.Entities.tblProductPropertis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<Guid>("TopicId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("tblProductPropertis");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductPropertisAgg.Entities.tblProductPropertis_Translates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PropertyId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.HasIndex("PropertyId");

                    b.ToTable("tblProductPropertis_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsAgg.Entities.tblProductReviews", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Advantages")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("AuthorUserId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountStar")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisAdvantages")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductSellerId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorUserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductSellerId");

                    b.ToTable("tblProductReviews");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsAttributeAgg.Entities.tblProductReviewsAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("TopicId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("tblProductReviewsAttribute");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsAttributeAgg.Entities.tblProductReviewsAttribute_Translate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductReviewsAttributeId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.HasIndex("ProductReviewsAttributeId");

                    b.ToTable("tblProductReviewsAttribute_Translate");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsAttributeValuesAgg.Entities.tblProductReviewsAttributeValues", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductReviewAttributeId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductReviewId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ProductReviewAttributeId");

                    b.HasIndex("ProductReviewId");

                    b.ToTable("tblProductReviewsAttributeValues");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsLikesAgg.Entities.tblProductReviewsLikes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLike")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductReviewId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("tblProductReviewsLikes");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsMediaAgg.Entities.tblProductReviewsMedia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductReviewsId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileId")
                        .IsUnique();

                    b.HasIndex("ProductReviewsId");

                    b.ToTable("tblProductReviewsMedia");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductSellerAgg.Entities.tblProductSellers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SellerId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("tblProductSellers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductTopicAgg.Entities.tblProductTopic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("tblProductTopic");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductTopicAgg.Entities.tblProductTopic_Translates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductTopicId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.HasIndex("ProductTopicId");

                    b.ToTable("tblProductTopic_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductVariantAgg.Entities.tblProductVariants", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VariantType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblProductVariants");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductVariantAgg.Entities.tblProductVariants_Translates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductVariantId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.HasIndex("ProductVariantId");

                    b.ToTable("tblProductVariants_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductVariantsItemsAgg.Entities.tblProductVariantItems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountInStock")
                        .HasColumnType("int");

                    b.Property<Guid?>("GuaranteeId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<double>("Percent")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ProductId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductSellerId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductVariantId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SendBy")
                        .HasColumnType("int");

                    b.Property<int>("SendFrom")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("GuaranteeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductSellerId");

                    b.HasIndex("ProductVariantId");

                    b.ToTable("tblProductVariantItems");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CityAgg.Entities.tblCities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("ProvinceId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("tblCities");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CityAgg.Entities.tblCities_Translates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("LangId");

                    b.ToTable("tblCities_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CountryAgg.Entities.tblCountries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FlagImgId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhoneCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FlagImgId");

                    b.ToTable("tblCountries");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CountryAgg.Entities.tblCountries_Translates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("LangId");

                    b.ToTable("tblCountries_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CurrnencyAgg.Entities.tblCurrencies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("aDec")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("aSep")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("mDec")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("vMax")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("tblCurrencies");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CurrnencyAgg.Entities.tblCurrency_Translates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrencyId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("LangId");

                    b.ToTable("tblCurrency_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("CountryId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRtl")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NativeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("UseForSiteLanguage")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("tblLanguages");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.ProvinceAgg.Entities.tblProvinces", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("tblProvinces");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.ProvinceAgg.Entities.tblProvinces_Translate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProvinceId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("tblProvinces_Translate");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Settings.SettingsAgg.Entities.tblSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInManufacture")
                        .HasColumnType("bit");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SiteDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SiteEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SitePhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SiteTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SiteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.ToTable("tblSettings");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Templates.TemplatesAgg.Entitis.tblTamplates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Template")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.ToTable("tblTamplates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.AccessLevelAgg.Entities.tblAccessLevel_Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccessLevelId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.ToTable("tblAccessLevel_Roles");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.AccessLevelAgg.Entities.tblAccessLevels", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tblAccessLevels");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.AddressAgg.Entities.tblAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("CityId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Plaque")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ProviceId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProviceId");

                    b.HasIndex("UserId");

                    b.ToTable("tblAddress");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.RoleAgg.Entities.tblRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.HasIndex("ParentId");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.SellerAgg.Entities.tblSeller_Translates", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LogoId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SellerId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.HasIndex("LogoId");

                    b.HasIndex("SellerId");

                    b.ToTable("tblSeller_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.SellerAgg.Entities.tblSellers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tblSellers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid>("AccessLevelId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeller")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LangId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastTrySentSms")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordPhoneNumber")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProfileImgId")
                        .HasMaxLength(150)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("LangId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileImgId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Users.RoleAgg.Entities.tblRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Users.RoleAgg.Entities.tblRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Categories.CategoriesAgg.Entities.tblCategoris", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.FileServer.FileAgg.Entities.tblFiles", "tblFiles")
                        .WithMany("tblCategoris")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PrancaBeauty.Domin.Categories.CategoriesAgg.Entities.tblCategoris", "tblCategory_Parent")
                        .WithMany("tblCategory_Childs")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("tblCategory_Parent");

                    b.Navigation("tblFiles");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Categories.CategoriesAgg.Entities.tblCategory_Translates", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Categories.CategoriesAgg.Entities.tblCategoris", "tblCategoris")
                        .WithMany("tblCategory_Translates")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguages")
                        .WithMany("tblCategory_Translates")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblCategoris");

                    b.Navigation("tblLanguages");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.FileServer.FileAgg.Entities.tblFiles", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.FileServer.FilePathAgg.Entities.tblFilePaths", "tblFilePaths")
                        .WithMany("tblFiles")
                        .HasForeignKey("FilePathId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.FileServer.FileTypeAgg.Entities.tblFileTypes", "tblFileTypes")
                        .WithMany("tblFiles")
                        .HasForeignKey("FileTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", "tblUser")
                        .WithMany("tblFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("tblFilePaths");

                    b.Navigation("tblFileTypes");

                    b.Navigation("tblUser");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.FileServer.FilePathAgg.Entities.tblFilePaths", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.FileServer.ServerAgg.Entities.tblFileServers", "tblFileServer")
                        .WithMany("tblFilePaths")
                        .HasForeignKey("FileServerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblFileServer");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Keywords.Keywords_Products.Entities.tblKeywords_Products", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Keywords.KeywordAgg.Entities.tblKeywords", "tblKeywords")
                        .WithMany("tblKeywords_Products")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", "tblProducts")
                        .WithMany("tblKeywords_Products")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblKeywords");

                    b.Navigation("tblProducts");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.GuaranteeAgg.Entities.tblGuarantee_Translates", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Product.GuaranteeAgg.Entities.tblGuarantee", "tblGuarantee")
                        .WithMany("tblGuarantee_Translates")
                        .HasForeignKey("GuaranteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguages")
                        .WithMany("tblGuarantee_Translates")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblGuarantee");

                    b.Navigation("tblLanguages");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.PostingRestrictionsAgg.Entites.tblPostingRestrictions", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.CountryAgg.Entities.tblCountries", "tblCountries")
                        .WithMany("tblPostingRestrictions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", "tblProducts")
                        .WithMany("tblPostingRestrictions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblCountries");

                    b.Navigation("tblProducts");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", "tblAuthorUser")
                        .WithMany("tblProducts")
                        .HasForeignKey("AuthorUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Categories.CategoriesAgg.Entities.tblCategoris", "tblCategory")
                        .WithMany("tblProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguage")
                        .WithMany("tblProducts")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductTopicAgg.Entities.tblProductTopic", "tblProductTopic")
                        .WithMany("tblProducts")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("tblAuthorUser");

                    b.Navigation("tblCategory");

                    b.Navigation("tblLanguage");

                    b.Navigation("tblProductTopic");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductAskAgg.Entities.tblProductAsk", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Product.ProductAskAgg.Entities.tblProductAsk", "tblProductAsk_Parent")
                        .WithMany("tblProductAsk_Childs")
                        .HasForeignKey("AskId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", "tblProducts")
                        .WithMany("tblProductAsk")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", "tblUsers")
                        .WithMany("tblProductAsk")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblProductAsk_Parent");

                    b.Navigation("tblProducts");

                    b.Navigation("tblUsers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductAskLikesAgg.Entities.tblProductAskLikes", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Product.ProductAskAgg.Entities.tblProductAsk", "tblProductAsk")
                        .WithMany("tblProductAskLikes")
                        .HasForeignKey("ProductAskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", "tblUsers")
                        .WithMany("tblProductAskLikes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblProductAsk");

                    b.Navigation("tblUsers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductMediaAgg.Entities.tblProductMedia", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.FileServer.FileAgg.Entities.tblFiles", "tblFiles")
                        .WithOne("tblProductMedia")
                        .HasForeignKey("PrancaBeauty.Domin.Product.ProductMediaAgg.Entities.tblProductMedia", "FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", "tblProducts")
                        .WithMany("tblProductMedia")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblFiles");

                    b.Navigation("tblProducts");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductPricesAgg.Entities.tblProductPrices", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.CurrnencyAgg.Entities.tblCurrencies", "tblCurrency")
                        .WithMany("tblProductPrices")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", "tblProducts")
                        .WithMany("tblProductPrices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", "tblUsers")
                        .WithMany("tblProductPrices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblCurrency");

                    b.Navigation("tblProducts");

                    b.Navigation("tblUsers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductPropertiesValuesAgg.Entities.tblProductPropertiesValues", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", "tblProducts")
                        .WithMany("tblProductPropertiesValues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductPropertisAgg.Entities.tblProductPropertis", "tblProductPropertis")
                        .WithMany("tblProductPropertiesValues")
                        .HasForeignKey("ProductPropertiesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblProductPropertis");

                    b.Navigation("tblProducts");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductPropertisAgg.Entities.tblProductPropertis", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Product.ProductTopicAgg.Entities.tblProductTopic", "tblProductTopic")
                        .WithMany("tblProductPropertis")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblProductTopic");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductPropertisAgg.Entities.tblProductPropertis_Translates", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguages")
                        .WithMany("tblProductPropertis_Translates")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductPropertisAgg.Entities.tblProductPropertis", "tblProductPropertis")
                        .WithMany("tblProductPropertis_Translates")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblLanguages");

                    b.Navigation("tblProductPropertis");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsAgg.Entities.tblProductReviews", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", "tblUsers")
                        .WithMany("tblProductReviews")
                        .HasForeignKey("AuthorUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", "tblProducts")
                        .WithMany("tblProductReviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductSellerAgg.Entities.tblProductSellers", "tblProductSellers")
                        .WithMany("tblProductReviews")
                        .HasForeignKey("ProductSellerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("tblProductSellers");

                    b.Navigation("tblProducts");

                    b.Navigation("tblUsers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsAttributeAgg.Entities.tblProductReviewsAttribute", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Product.ProductTopicAgg.Entities.tblProductTopic", "tblProductTopic")
                        .WithMany("tblProductReviewsAttribute")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblProductTopic");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsAttributeAgg.Entities.tblProductReviewsAttribute_Translate", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguages")
                        .WithMany("tblProductReviewsAttribute_Translate")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductReviewsAttributeAgg.Entities.tblProductReviewsAttribute", "tblProductReviewsAttribute")
                        .WithMany("tblProductReviewsAttribute_Translate")
                        .HasForeignKey("ProductReviewsAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblLanguages");

                    b.Navigation("tblProductReviewsAttribute");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsAttributeValuesAgg.Entities.tblProductReviewsAttributeValues", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Product.ProductReviewsAttributeAgg.Entities.tblProductReviewsAttribute", "tblProductReviewsAttribute")
                        .WithMany("tblProductReviewsAttributeValues")
                        .HasForeignKey("ProductReviewAttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductReviewsAgg.Entities.tblProductReviews", "tblProductReviews")
                        .WithMany("tblProductReviewsAttributeValues")
                        .HasForeignKey("ProductReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblProductReviews");

                    b.Navigation("tblProductReviewsAttribute");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsLikesAgg.Entities.tblProductReviewsLikes", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Product.ProductReviewsAgg.Entities.tblProductReviews", "tblProductReviews")
                        .WithMany("tblProductReviewsLikes")
                        .HasForeignKey("ProductReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", "tblUsers")
                        .WithMany("tblProductReviewsLikes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblProductReviews");

                    b.Navigation("tblUsers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsMediaAgg.Entities.tblProductReviewsMedia", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.FileServer.FileAgg.Entities.tblFiles", "tblFiles")
                        .WithOne("tblProductReviewsMedia")
                        .HasForeignKey("PrancaBeauty.Domin.Product.ProductReviewsMediaAgg.Entities.tblProductReviewsMedia", "FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductReviewsAgg.Entities.tblProductReviews", "tblProductReviews")
                        .WithMany("tblProductReviewsMedia")
                        .HasForeignKey("ProductReviewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblFiles");

                    b.Navigation("tblProductReviews");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductSellerAgg.Entities.tblProductSellers", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", "tblProducts")
                        .WithMany("tblProductSellers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Users.SellerAgg.Entities.tblSellers", "tblSellers")
                        .WithMany("tblProductSellers")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblProducts");

                    b.Navigation("tblSellers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductTopicAgg.Entities.tblProductTopic", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.FileServer.FileAgg.Entities.tblFiles", "tblFiles")
                        .WithMany("tblProductTopic")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblFiles");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductTopicAgg.Entities.tblProductTopic_Translates", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguages")
                        .WithMany("tblProductTopic_Translates")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductTopicAgg.Entities.tblProductTopic", "tblProductTopic")
                        .WithMany("tblProductTopic_Translates")
                        .HasForeignKey("ProductTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblLanguages");

                    b.Navigation("tblProductTopic");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductVariantAgg.Entities.tblProductVariants_Translates", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguages")
                        .WithMany("tblProductVariants_Translates")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductVariantAgg.Entities.tblProductVariants", "tblProductVariants")
                        .WithMany("tblProductVariants_Translates")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblLanguages");

                    b.Navigation("tblProductVariants");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductVariantsItemsAgg.Entities.tblProductVariantItems", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Product.GuaranteeAgg.Entities.tblGuarantee", "tblGuarantee")
                        .WithMany("tblProductVariantItems")
                        .HasForeignKey("GuaranteeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", "tblProducts")
                        .WithMany("tblProductVariantItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductSellerAgg.Entities.tblProductSellers", "tblProductSellers")
                        .WithMany("tblProductVariantItems")
                        .HasForeignKey("ProductSellerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Product.ProductVariantAgg.Entities.tblProductVariants", "tblProductVariants")
                        .WithMany("tblProductVariantItems")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblGuarantee");

                    b.Navigation("tblProductSellers");

                    b.Navigation("tblProductVariants");

                    b.Navigation("tblProducts");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CityAgg.Entities.tblCities", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.ProvinceAgg.Entities.tblProvinces", "tblProvince")
                        .WithMany("tblCities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblProvince");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CityAgg.Entities.tblCities_Translates", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.CityAgg.Entities.tblCities", "tblCity")
                        .WithMany("tblCities_Translates")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguage")
                        .WithMany("tblCities_Translates")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblCity");

                    b.Navigation("tblLanguage");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CountryAgg.Entities.tblCountries", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.FileServer.FileAgg.Entities.tblFiles", "tblFiles")
                        .WithMany("tblCountries")
                        .HasForeignKey("FlagImgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblFiles");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CountryAgg.Entities.tblCountries_Translates", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.CountryAgg.Entities.tblCountries", "tblCountries")
                        .WithMany("tblCountries_Translates")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguages")
                        .WithMany("tblCountries_Translates")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblCountries");

                    b.Navigation("tblLanguages");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CurrnencyAgg.Entities.tblCurrencies", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.CountryAgg.Entities.tblCountries", "tblCountry")
                        .WithMany("tblCurrencies")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblCountry");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CurrnencyAgg.Entities.tblCurrency_Translates", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.CurrnencyAgg.Entities.tblCurrencies", "tblCurrency")
                        .WithMany("tblCurrency_Translates")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguage")
                        .WithMany("tblCurrency_Translates")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblCurrency");

                    b.Navigation("tblLanguage");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.CountryAgg.Entities.tblCountries", "tblCountries")
                        .WithMany("tblLanguages")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblCountries");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.ProvinceAgg.Entities.tblProvinces", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.CountryAgg.Entities.tblCountries", "tblCountry")
                        .WithMany("tblProvinces")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblCountry");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.ProvinceAgg.Entities.tblProvinces_Translate", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguage")
                        .WithMany("tblProvinces_Translate")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Region.ProvinceAgg.Entities.tblProvinces", "tblProvince")
                        .WithMany("tblProvinces_Translate")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblLanguage");

                    b.Navigation("tblProvince");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Settings.SettingsAgg.Entities.tblSettings", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguages")
                        .WithMany("tblSettings")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblLanguages");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Templates.TemplatesAgg.Entitis.tblTamplates", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguages")
                        .WithMany("tblTamplates")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblLanguages");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.AccessLevelAgg.Entities.tblAccessLevel_Roles", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Users.AccessLevelAgg.Entities.tblAccessLevels", "tblAccessLevels")
                        .WithMany("tblAccessLevel_Roles")
                        .HasForeignKey("AccessLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Users.RoleAgg.Entities.tblRoles", "tblRoles")
                        .WithMany("tblAccessLevel_Roles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblAccessLevels");

                    b.Navigation("tblRoles");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.AddressAgg.Entities.tblAddress", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.CityAgg.Entities.tblCities", "tblCities")
                        .WithMany("tblAddress")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Region.CountryAgg.Entities.tblCountries", "tblCountries")
                        .WithMany("tblAddress")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Region.ProvinceAgg.Entities.tblProvinces", "tblProvinces")
                        .WithMany("tblAddress")
                        .HasForeignKey("ProviceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", "tblUsers")
                        .WithMany("tblAddress")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tblCities");

                    b.Navigation("tblCountries");

                    b.Navigation("tblProvinces");

                    b.Navigation("tblUsers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.RoleAgg.Entities.tblRoles", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Users.RoleAgg.Entities.tblRoles", "tblRoles_Parent")
                        .WithMany("tblRoles_Childs")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("tblRoles_Parent");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.SellerAgg.Entities.tblSeller_Translates", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguages")
                        .WithMany("tblSeller_Translates")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.FileServer.FileAgg.Entities.tblFiles", "tblFiles")
                        .WithMany("tblSeller_Translates")
                        .HasForeignKey("LogoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PrancaBeauty.Domin.Users.SellerAgg.Entities.tblSellers", "tblSellers")
                        .WithMany("tblSeller_Translates")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblFiles");

                    b.Navigation("tblLanguages");

                    b.Navigation("tblSellers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.SellerAgg.Entities.tblSellers", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", "tblUsers")
                        .WithOne("tblSellers")
                        .HasForeignKey("PrancaBeauty.Domin.Users.SellerAgg.Entities.tblSellers", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tblUsers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", b =>
                {
                    b.HasOne("PrancaBeauty.Domin.Users.AccessLevelAgg.Entities.tblAccessLevels", "tblAccessLevels")
                        .WithMany("tblUsers")
                        .HasForeignKey("AccessLevelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", "tblLanguages")
                        .WithMany("tblUsers")
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PrancaBeauty.Domin.FileServer.FileAgg.Entities.tblFiles", "tblProfileImage")
                        .WithMany("tblUserProfile")
                        .HasForeignKey("ProfileImgId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("tblAccessLevels");

                    b.Navigation("tblLanguages");

                    b.Navigation("tblProfileImage");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Categories.CategoriesAgg.Entities.tblCategoris", b =>
                {
                    b.Navigation("tblCategory_Childs");

                    b.Navigation("tblCategory_Translates");

                    b.Navigation("tblProducts");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.FileServer.FileAgg.Entities.tblFiles", b =>
                {
                    b.Navigation("tblCategoris");

                    b.Navigation("tblCountries");

                    b.Navigation("tblProductMedia");

                    b.Navigation("tblProductReviewsMedia");

                    b.Navigation("tblProductTopic");

                    b.Navigation("tblSeller_Translates");

                    b.Navigation("tblUserProfile");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.FileServer.FilePathAgg.Entities.tblFilePaths", b =>
                {
                    b.Navigation("tblFiles");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.FileServer.FileTypeAgg.Entities.tblFileTypes", b =>
                {
                    b.Navigation("tblFiles");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.FileServer.ServerAgg.Entities.tblFileServers", b =>
                {
                    b.Navigation("tblFilePaths");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Keywords.KeywordAgg.Entities.tblKeywords", b =>
                {
                    b.Navigation("tblKeywords_Products");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.GuaranteeAgg.Entities.tblGuarantee", b =>
                {
                    b.Navigation("tblGuarantee_Translates");

                    b.Navigation("tblProductVariantItems");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductAgg.Entities.tblProducts", b =>
                {
                    b.Navigation("tblKeywords_Products");

                    b.Navigation("tblPostingRestrictions");

                    b.Navigation("tblProductAsk");

                    b.Navigation("tblProductMedia");

                    b.Navigation("tblProductPrices");

                    b.Navigation("tblProductPropertiesValues");

                    b.Navigation("tblProductReviews");

                    b.Navigation("tblProductSellers");

                    b.Navigation("tblProductVariantItems");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductAskAgg.Entities.tblProductAsk", b =>
                {
                    b.Navigation("tblProductAskLikes");

                    b.Navigation("tblProductAsk_Childs");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductPropertisAgg.Entities.tblProductPropertis", b =>
                {
                    b.Navigation("tblProductPropertiesValues");

                    b.Navigation("tblProductPropertis_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsAgg.Entities.tblProductReviews", b =>
                {
                    b.Navigation("tblProductReviewsAttributeValues");

                    b.Navigation("tblProductReviewsLikes");

                    b.Navigation("tblProductReviewsMedia");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductReviewsAttributeAgg.Entities.tblProductReviewsAttribute", b =>
                {
                    b.Navigation("tblProductReviewsAttributeValues");

                    b.Navigation("tblProductReviewsAttribute_Translate");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductSellerAgg.Entities.tblProductSellers", b =>
                {
                    b.Navigation("tblProductReviews");

                    b.Navigation("tblProductVariantItems");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductTopicAgg.Entities.tblProductTopic", b =>
                {
                    b.Navigation("tblProductPropertis");

                    b.Navigation("tblProductReviewsAttribute");

                    b.Navigation("tblProductTopic_Translates");

                    b.Navigation("tblProducts");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Product.ProductVariantAgg.Entities.tblProductVariants", b =>
                {
                    b.Navigation("tblProductVariantItems");

                    b.Navigation("tblProductVariants_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CityAgg.Entities.tblCities", b =>
                {
                    b.Navigation("tblAddress");

                    b.Navigation("tblCities_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CountryAgg.Entities.tblCountries", b =>
                {
                    b.Navigation("tblAddress");

                    b.Navigation("tblCountries_Translates");

                    b.Navigation("tblCurrencies");

                    b.Navigation("tblLanguages");

                    b.Navigation("tblPostingRestrictions");

                    b.Navigation("tblProvinces");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.CurrnencyAgg.Entities.tblCurrencies", b =>
                {
                    b.Navigation("tblCurrency_Translates");

                    b.Navigation("tblProductPrices");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.LanguagesAgg.Entities.tblLanguages", b =>
                {
                    b.Navigation("tblCategory_Translates");

                    b.Navigation("tblCities_Translates");

                    b.Navigation("tblCountries_Translates");

                    b.Navigation("tblCurrency_Translates");

                    b.Navigation("tblGuarantee_Translates");

                    b.Navigation("tblProductPropertis_Translates");

                    b.Navigation("tblProductReviewsAttribute_Translate");

                    b.Navigation("tblProductTopic_Translates");

                    b.Navigation("tblProductVariants_Translates");

                    b.Navigation("tblProducts");

                    b.Navigation("tblProvinces_Translate");

                    b.Navigation("tblSeller_Translates");

                    b.Navigation("tblSettings");

                    b.Navigation("tblTamplates");

                    b.Navigation("tblUsers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Region.ProvinceAgg.Entities.tblProvinces", b =>
                {
                    b.Navigation("tblAddress");

                    b.Navigation("tblCities");

                    b.Navigation("tblProvinces_Translate");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.AccessLevelAgg.Entities.tblAccessLevels", b =>
                {
                    b.Navigation("tblAccessLevel_Roles");

                    b.Navigation("tblUsers");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.RoleAgg.Entities.tblRoles", b =>
                {
                    b.Navigation("tblAccessLevel_Roles");

                    b.Navigation("tblRoles_Childs");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.SellerAgg.Entities.tblSellers", b =>
                {
                    b.Navigation("tblProductSellers");

                    b.Navigation("tblSeller_Translates");
                });

            modelBuilder.Entity("PrancaBeauty.Domin.Users.UserAgg.Entities.tblUsers", b =>
                {
                    b.Navigation("tblAddress");

                    b.Navigation("tblFiles");

                    b.Navigation("tblProductAsk");

                    b.Navigation("tblProductAskLikes");

                    b.Navigation("tblProductPrices");

                    b.Navigation("tblProductReviews");

                    b.Navigation("tblProductReviewsLikes");

                    b.Navigation("tblProducts");

                    b.Navigation("tblSellers");
                });
#pragma warning restore 612, 618
        }
    }
}
