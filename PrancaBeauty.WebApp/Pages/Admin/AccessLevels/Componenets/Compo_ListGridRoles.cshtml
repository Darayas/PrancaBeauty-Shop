@page "/{culture}/Admin/AccessLevel/Compo/ListGridRoles"
@model PrancaBeauty.WebApp.Pages.Admin.AccessLevels.Componenets.Compo_ListGridRolesModel

@if (Model.Input.AccessLevelId == null)
{
    <script>
        function IsSelected(_Name) {
            return '';
        }
    </script>
}
else
{
    <script>
            function IsSelected(_Name) {
                var RolesNames = '@string.Join(",", (string[])ViewData["SelectedRoles"]),';

                if (RolesNames.includes(_Name+",")) {
                    return 'checked';
                } else {
                    return '';
                }
        }
    </script>
}

<script>


    function onDataBound(e) {
        var data = this.dataSource.data();

        $.each(data, function (i, row) {
            if (row.get("HasChild") == false) {
                $('tr[data-uid="' + row.uid + '"]').find(".k-hierarchy-cell a").remove();
            }
        });

        var grid = $("#ListRoles").data("kendoGrid");
          $( ".k-master-row" ).each(function( index ) {
            grid.expandRow(this);
            grid.collapseRow(this);
          });
        //this.expandRow(this.tbody.find("tr.k-master-row"));
        //this.collapseRow(this.tbody.find("tr.k-master-row"));
    }
</script>

<div class="k-lang">
    @(Html.Kendo()
    .Grid<vmCompo_ListGridRolesModel>()
    .Name("ListRoles")
    .DefaultSettings(Localizer)
    .Pageable(a=>a.Enabled(false))
    .Sortable(false)
    .Columns(col=> {
    col.Bound(a => a.Id).Title(" ").Sortable(false).Width(50).ClientTemplate("<input #=IsSelected(Name)# value='#=Name#' name='Input.Roles' class='k-checkbox' type='checkbox'/>");
    col.Bound(a => a.PageName).Sortable(false);
    col.Bound(a => a.Name).Sortable(false);
    col.Bound(a => a.Description).Sortable(false);
    })
    .PersistSelection()
    .Events(a=> {
    a.DataBound("onDataBound");
    })
    .ClientDetailTemplateId("ListAccessLevelTmpl")
    .DataSource(ds=> ds.Ajax()
    .Model(model=> model.Id(a=>a.Id))
    .Read(read=> read.Url($"/{ViewData["Culture"]}/Admin/AccessLevel/Compo/ListGridRoles?handler=Read").Data("forgeryToken"))))
</div>

<script id="ListAccessLevelTmpl" type="text/kendo-tmpl">
    @(Html.Kendo()
          .Grid<vmCompo_ListGridRolesModel>()
          .Name("ListRoles_Child#=Id#")
          .DefaultSettings(Localizer)
          .Pageable(a=>a.Enabled(false))
          .Sortable(false)
          .Columns(col=> {
              col.Bound(a => a.Id).Title(" ").Sortable(false).Width(50).ClientTemplate("<input \\#=IsSelected(Name)\\# value='\\#=Name\\#' name='Input.Roles' class='k-checkbox' type='checkbox'/>");
              col.Bound(a => a.PageName).Sortable(false);
              col.Bound(a => a.Name).Sortable(false);
              col.Bound(a => a.Description).Sortable(false);
          })
          .PersistSelection()
          .Events(a=> {
              a.DataBound("onDataBound");
          })
          .ClientDetailTemplateId("ListAccessLevelTmpl_ChildTmpl")
          .DataSource(ds=> ds.Ajax()
                             .Model(model=> model.Id(a=>a.Id))
                             .Read(read=> read.Url($"/{ViewData["Culture"]}/Admin/AccessLevel/Compo/ListGridRoles?handler=Read&ParentId=#=Id#").Data("forgeryToken")))
          .ToClientTemplate())
</script>

<script id="ListAccessLevelTmpl_ChildTmpl" type="text/kendo-tmpl">
    @(Html.Kendo()
         .Grid<vmCompo_ListGridRolesModel>()
         .Name("ListRoles_Child#=Id#")
         .DefaultSettings(Localizer)
         .Pageable(a=>a.Enabled(false))
         .Sortable(false)
         .Columns(col=> {
             col.Bound(a => a.Id).Title(" ").Sortable(false).Width(50).ClientTemplate("<input \\#=IsSelected(Name)\\# value='\\#=Name\\#' name='Input.Roles' class='k-checkbox' type='checkbox'/>");
             col.Bound(a => a.PageName).Sortable(false);
             col.Bound(a => a.Name).Sortable(false);
             col.Bound(a => a.Description).Sortable(false);
         })
         .PersistSelection()
         .Events(a=> {
             a.DataBound("onDataBound");
         })
         .ClientDetailTemplateId("ListAccessLevelTmpl_ChildTmpl_Child")
         .DataSource(ds=> ds.Ajax()
                            .Model(model=> model.Id(a=>a.Id))
                            .Read(read=> read.Url($"/{ViewData["Culture"]}/Admin/AccessLevel/Compo/ListGridRoles?handler=Read&ParentId=#=Id#").Data("forgeryToken")))
         .ToClientTemplate())
</script>

<script id="ListAccessLevelTmpl_ChildTmpl_Child" type="text/kendo-tmpl">
    @(Html.Kendo()
         .Grid<vmCompo_ListGridRolesModel>()
         .Name("ListRoles_Child#=Id#")
         .DefaultSettings(Localizer)
         .Pageable(a=>a.Enabled(false))
         .Sortable(false)
         .Columns(col=> {
             col.Bound(a => a.Id).Title(" ").Sortable(false).Width(50).ClientTemplate("<input \\#=IsSelected(Name)\\# value='\\#=Name\\#' name='Input.Roles' class='k-checkbox' type='checkbox'/>");
             col.Bound(a => a.PageName).Sortable(false);
             col.Bound(a => a.Name).Sortable(false);
             col.Bound(a => a.Description).Sortable(false);
         })
         .PersistSelection()
         .Events(a=> {
             a.DataBound("onDataBound");
         })
         .DataSource(ds=> ds.Ajax()
                            .Model(model=> model.Id(a=>a.Id))
                            .Read(read=> read.Url($"/{ViewData["Culture"]}/Admin/AccessLevel/Compo/ListGridRoles?handler=Read&ParentId=#=Id#").Data("forgeryToken")))
         .ToClientTemplate())
</script>